// debug-test.js - Place this in your backend directory and run: node debug-test.js

require('dotenv').config();

// Test all components individually
async function runCompleteDebugTest() {
  console.log('üöÄ Starting Complete Debug Test Suite');
  console.log('=====================================');

  // 1. Environment Check
  console.log('\n1Ô∏è‚É£ ENVIRONMENT CHECK:');
  console.log('NODE_ENV:', process.env.NODE_ENV);
  console.log(
    'GEMINI_API_KEY:',
    process.env.GEMINI_API_KEY
      ? `SET (${process.env.GEMINI_API_KEY.substring(0, 10)}...)`
      : '‚ùå MISSING'
  );
  console.log('GITHUB_CLIENT_ID:', process.env.GITHUB_CLIENT_ID ? 'SET' : '‚ùå MISSING');
  console.log('SESSION_SECRET:', process.env.SESSION_SECRET ? 'SET' : '‚ùå MISSING');

  // 2. Test Gemini Service Import
  console.log('\n2Ô∏è‚É£ GEMINI SERVICE TEST:');
  try {
    const geminiService = require('./services/geminiService');
    console.log('‚úÖ Gemini service imported successfully');

    // Test with simple file
    const testFiles = [
      {
        path: 'calculator.js',
        name: 'calculator.js',
        content: `
// Simple calculator functions
function add(a, b) {
  return a + b;
}

function subtract(a, b) {
  return a - b;
}

function multiply(a, b) {
  return a * b;
}

function divide(a, b) {
  if (b === 0) {
    throw new Error('Division by zero');
  }
  return a / b;
}

module.exports = { add, subtract, multiply, divide };
        `.trim(),
      },
    ];

    console.log('üìù Testing test case generation...');

    const testCases = await geminiService.generateTestCases(testFiles, {
      repository: 'test/debug-repo',
      testType: 'unit',
      framework: 'jest',
      options: {},
    });

    console.log('‚úÖ Test cases generated successfully!');
    console.log('üìä Results:');
    console.log('- Test cases count:', testCases.length);
    console.log('- First test case:', testCases[0]?.title || 'None');
    console.log('- Generated by:', testCases[0]?.generatedBy || 'Unknown');

    // Show first test case details
    if (testCases.length > 0) {
      console.log('\nüìã FIRST TEST CASE SAMPLE:');
      console.log('Title:', testCases[0].title);
      console.log('Type:', testCases[0].type);
      console.log('Priority:', testCases[0].priority);
      console.log('Code preview:', testCases[0].code?.substring(0, 200) + '...');
    }
  } catch (error) {
    console.error('‚ùå Gemini service test failed:', error.message);
    console.error('Stack:', error.stack);
  }

  // 3. Test File Analysis Service
  console.log('\n3Ô∏è‚É£ FILE ANALYSIS SERVICE TEST:');
  try {
    const FileAnalysisService = require('./services/fileAnalysis');
    const fileAnalysisService = new FileAnalysisService();

    const testFile = {
      path: 'src/utils/helper.js',
      name: 'helper.js',
      size: 1024,
    };

    const analysis = fileAnalysisService.analyzeFile(testFile);
    console.log('‚úÖ File analysis working');
    console.log('Analysis result:', analysis);
  } catch (error) {
    console.error('‚ùå File analysis test failed:', error.message);
  }

  // 4. Test Auth Module
  console.log('\n4Ô∏è‚É£ AUTH MODULE TEST:');
  try {
    const { validateSession, githubClients } = require('./routes/auth');
    console.log('‚úÖ Auth module imports successfully');
    console.log('GitHub clients map size:', githubClients.size);
  } catch (error) {
    console.error('‚ùå Auth module test failed:', error.message);
  }

  // 5. Test Server Routes
  console.log('\n5Ô∏è‚É£ ROUTES TEST:');
  try {
    const testcaseRoutes = require('./routes/testcases');
    console.log('‚úÖ Testcase routes loaded successfully');
  } catch (error) {
    console.error('‚ùå Routes test failed:', error.message);
  }

  console.log('\n=====================================');
  console.log('üèÅ Debug Test Complete!');
  console.log('=====================================');
}

// Run the test
runCompleteDebugTest().catch(console.error);
